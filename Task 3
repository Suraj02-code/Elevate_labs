mysql> CREATE DATABASE ecommerce_db;
E ecommerce_db;
Query OK, 1 row affected (0.02 sec)

mysql> USE ecommerce_db;
Database changed
mysql> CREATE TABLE customers (
    ->     customer_id INT PRIMARY KEY,
    ->     name VARCHAR(100),
    ->     email VARCHAR(100),
    ->     city VARCHAR(50)
    -> );
rders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(100),
    price DECIMAL(10,2)
);

CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);
Query OK, 0 rows affected (0.11 sec)

mysql>
mysql> CREATE TABLE orders (
    ->     order_id INT PRIMARY KEY,
    ->     customer_id INT,
    ->     order_date DATE,
    ->     total_amount DECIMAL(10,2),
    ->     FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
    -> );
Query OK, 0 rows affected (0.10 sec)

mysql>
mysql> CREATE TABLE products (
    ->     product_id INT PRIMARY KEY,
    ->     product_name VARCHAR(100),
    ->     price DECIMAL(10,2)
    -> );
Query OK, 0 rows affected (0.07 sec)

mysql>
mysql> CREATE TABLE order_items (
    ->     order_item_id INT PRIMARY KEY,
    ->     order_id INT,
    ->     product_id INT,
    ->     quantity INT,
    ->     FOREIGN KEY (order_id) REFERENCES orders(order_id),
    ->     FOREIGN KEY (product_id) REFERENCES products(product_id)
    -> );
Query OK, 0 rows affected (0.11 sec)

mysql> INSERT INTO customers VALUES
@example.com', 'Mumbai'),
(2, 'B    -> (1, 'Alice', 'alice@example.com', 'Mumbai'),
    -> (2, 'Bob', 'bob@example.com', 'Delhi');
 1, '2025-04-01', 250.00),
(2, 2, '2025-04-02', 300.00);

INSERT INTO products VALUES
(1, 'Laptop', 50000.00),
(2, 'Mouse', 500.00),
(3, 'Keyboard', 1000.00);

INSERT INTO order_items VALUES
(1, 1, 2, 2), -- 2 Mouse
(2, 1, 3, 1), -- 1 Keyboard
(3, 2, 1, 1); -- 1 Laptop
Query OK, 2 rows affected (0.05 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql>
mysql> INSERT INTO orders VALUES
    -> (1, 1, '2025-04-01', 250.00),
    -> (2, 2, '2025-04-02', 300.00);
Query OK, 2 rows affected (0.01 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql>
mysql> INSERT INTO products VALUES
    -> (1, 'Laptop', 50000.00),
    -> (2, 'Mouse', 500.00),
    -> (3, 'Keyboard', 1000.00);
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql>
mysql> INSERT INTO order_items VALUES
    -> (1, 1, 2, 2), -- 2 Mouse
    -> (2, 1, 3, 1), -- 1 Keyboard
    -> (3, 2, 1, 1); -- 1 Laptop
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> SELECT SUM(total_amount) AS total_revenue FROM orders;
+---------------+
| total_revenue |
+---------------+
|        550.00 |
+---------------+
1 row in set (0.01 sec)

mysql> SELECT AVG(total_amount) AS avg_revenue FROM orders;
+-------------+
| avg_revenue |
+-------------+
|  275.000000 |
+-------------+
1 row in set (0.00 sec)

mysql> SELECT o.order_id, c.name, o.order_date, o.total_amount  
    -> From orders o
    -> JOIN customers c ON o.customer_id = c.customer_id;
+----------+-------+------------+--------------+
| order_id | name  | order_date | total_amount |
+----------+-------+------------+--------------+
|        1 | Alice | 2025-04-01 |       250.00 |
|        2 | Bob   | 2025-04-02 |       300.00 |
+----------+-------+------------+--------------+
2 rows in set (0.00 sec)

mysql> SELECT p.product_name, SUM(oi.quantity) AS total_units_sold
 order_items oi
    -> FROM order_items oi
    -> JOIN products p ON oi.product_id = p.product_id
    -> GROUP BY p.product_name
       total_units_sol    
    -> ORDER BY total_units_sold DESC;
+--------------+------------------+
| product_name | total_units_sold |
+--------------+------------------+
| Mouse        |                2 |
| Keyboard     |                1 |
| Laptop       |                1 |
+--------------+------------------+
3 rows in set (0.02 sec)

mysql> CREATE VIEW order_summary AS
    -> SELECT o.order_id, c.name AS customer, o.total_amount
    -> FROM orders o
    -> JOIN customers c ON o.customer_id = c.customer_id;
Query OK, 0 rows affected (0.01 sec)

mysql> SELECT DISTINCT customer_id FROM orders
SELECT order_id     
    -> WHERE order_id IN (
    ->     SELECT order_id FROM order_items
    ->     GROUP BY order_id
    ->     HAVING COUNT(product_id) > 1
    -> );
+-------------+
| customer_id |
+-------------+
|           1 |
+-------------+
1 row in set (0.00 sec)

